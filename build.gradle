plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sojka'
version = '0.0.1-SNAPSHOT'

ext {
	repsyUsername = project.hasProperty('repsyUser') ? project.repsyUser : System.getenv('REPSY_USERNAME');
	repsyPassword = project.hasProperty('repsyPass') ? project.repsyPass : System.getenv('REPSY_PASSWORD');
	repsyPassword2 = project.hasProperty('repsyPass2') ? project.repsyPass2 : System.getenv('REPSY_PASSWORD2');
	repsyUrl = 'https://repo.repsy.io/mvn/' + repsyUsername + '/pomeranian-security'
	repsyUrl2 = 'https://repo.repsy.io/mvn/' + repsyUsername + '/pomeranian-astra'
}


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

	maven {
		url repsyUrl
		credentials {
			username repsyUsername
			password repsyPassword
		}
	}

	maven {
		url repsyUrl2
		credentials {
			username repsyUsername
			password repsyPassword2
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Pomeranian
	implementation 'com.sojka:Pomeranian-Security:0.0.12-SNAPSHOT'
	implementation 'com.sojka:pomeranian-astra:0.0.9-SNAPSHOT'

	// GCP
	implementation platform('com.google.cloud:libraries-bom:26.61.0')
	implementation 'com.google.cloud:google-cloud-pubsub'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:cassandra:1.20.1'
	testImplementation 'org.testcontainers:postgresql:1.21.0'
//	testImplementation 'org.testcontainers:cassandra'
//	testImplementation 'org.testcontainers:junit-jupiter'
//	testImplementation 'org.testcontainers:r2dbc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
